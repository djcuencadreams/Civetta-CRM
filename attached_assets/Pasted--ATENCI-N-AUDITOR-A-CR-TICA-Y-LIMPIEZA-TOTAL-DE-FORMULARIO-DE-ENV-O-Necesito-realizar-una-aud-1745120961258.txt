üí• ATENCI√ìN: AUDITOR√çA CR√çTICA Y LIMPIEZA TOTAL DE FORMULARIO DE ENV√çO üí•

Necesito realizar una auditor√≠a completa de este CRM y resolver los problemas actuales de arquitectura y rutas duplicadas del formulario de env√≠o.

üîç OBJETIVOS:

1. **Detectar y eliminar completamente** cualquier archivo duplicado, backup, renombrado o heredado (incluye extensiones `.bak`, `.obsoleto`, `.temp`, `.new`, `.fixed`, `.improved`, etc.) relacionados con:
   - `routes-shipping*`
   - `routes-web-form*`
   - `routes-react-shipping*`

2. **Asegurar que el sistema tenga solo UNA versi√≥n oficial, limpia y funcional del formulario React multistep**, que:
   - Se encuentra en `client/src/components/shipping/ShippingLabelForm.tsx`
   - Se carga desde `client/src/pages/embed/shipping-form.tsx`
   - Usa `EmbedShippingForm` con `EmbedShell` como layout

3. Validar que **todas las rutas** relacionadas al formulario:
   - `/shipping-form`
   - `/shipping`
   - `/etiqueta`
   - `/etiqueta-de-envio`
   - `/embed/shipping-form`
   - `/embed/shipping-form-static`
   ‚Üí est√©n redireccionando a la versi√≥n React y sirviendo `client/dist/index.html` como SPA moderna.

4. Eliminar completamente cualquier referencia a `res.sendFile(...)`, `res.render(...)` o `serveShippingForm(...)` que devuelva HTML est√°tico de:
   - `/templates/shipping/*`
   - o cualquier otra carpeta

5. Auditar el archivo `server/index.ts`:
   - Asegurarse que solo se importe y registre **una sola funci√≥n** de rutas: la versi√≥n moderna (`registerReactShippingRoutes`)
   - El registro de esta funci√≥n debe estar en las primeras l√≠neas del middleware, con prioridad absoluta sobre todas las dem√°s rutas.

6. Validar que los puertos 3002 y 3003 est√©n bien configurados y ambos sirvan el React moderno.
   - Usar `express.static` correctamente para `client/dist`
   - Confirmar que los assets (`/assets/*.js`, `*.css`) se cargan sin errores
   - Usar CORS correctamente para permitir embebido desde otros dominios

7. Validar que los componentes frontend tengan:
   - Validaci√≥n de duplicados (c√©dula, tel√©fono, email) con feedback visual
   - Modal de confirmaci√≥n o mensaje de √©xito luego de enviar
   - Manejo de errores visible y elegante si algo falla
   - Bot√≥n de env√≠o deshabilitado cuando hay errores

8. Eliminar cualquier componente frontend duplicado que tenga nombres similares (por ejemplo, `ShippingLabelForm.old.tsx`, `Step2_Form_bk.tsx`, etc.).

üîß ACCIONES A TOMAR:

‚úÖ Realiza escaneo completo en las carpetas:
   - `/server`
   - `/templates`
   - `/client/src/components/shipping`
   - `/client/src/pages/embed`

‚úÖ Elimina cualquier archivo innecesario o heredado (si quieres mu√©velos primero a `/deprecated` por seguridad)

‚úÖ Luego, **reinicia la app y verifica** que al visitar:
   https://961e2076-4a89-465e-9bf3-16eec0a168bf-00-9du5ikvis3t2.janeway.replit.dev:3003/embed/shipping-form  
   se vea **el formulario React con validaci√≥n, modal de √©xito y mejoras visuales.**

üîÅ Si el formulario **NO muestra las validaciones ni el modal**, sigue auditando hasta detectar qu√© archivo o l√≥gica rota sigue interfiriendo.

‚ö†Ô∏è No registres rutas duplicadas. No registres funciones de middleware obsoletas. NO uses ning√∫n archivo `.html`.

Este sistema debe ser una implementaci√≥n de clase mundial. Cumple las mejores pr√°cticas de arquitectura de software moderna.