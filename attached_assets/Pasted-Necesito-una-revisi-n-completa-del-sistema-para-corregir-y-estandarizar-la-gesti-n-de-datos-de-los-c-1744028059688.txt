Necesito una revisi√≥n completa del sistema para corregir y estandarizar la gesti√≥n de datos de los clientes. El sistema tiene problemas graves de inconsistencia entre los datos mostrados en el listado de clientes, la ficha completa, y los datos editados o creados desde el wizard o el formulario embebido.

Por favor, realiza los siguientes pasos de forma precisa y detallada, sin omitir nada y sin soluciones parciales:

---

1. üîÅ **UNIFICACI√ìN DE CAMPOS DE NOMBRES**:
   - Elimina cualquier uso del campo `name` en el sistema. 
   - Usa √∫nicamente `firstName` y `lastName` en la base de datos (`customers`), frontend (`ShippingLabelForm.tsx`, formularios embebidos y ficha de cliente), en PDF, etiquetas y cualquier otro archivo.
   - En todos los lugares donde se deba mostrar el nombre completo del cliente, genera din√°micamente la cadena: 
     ```js
     `${firstName} ${lastName}`
     ```
   - No mantengas un campo duplicado de nombre completo en la base de datos ni en objetos de cliente.

---

2. üõë **ELIMINACI√ìN DE CAMPOS DUPLICADOS O CON NOMBRES CONFLICTIVOS**:
   - Busca en toda la base de c√≥digo campos duplicados como:
     - `deliveryInstructions` vs `delivery_instructions`
     - `idNumber` vs `id_number`
     - `name` vs `firstName + lastName`
   - Unifica todos los nombres de campos. Usa `snake_case` en la base de datos (ej. `delivery_instructions`) y `camelCase` en el frontend (`deliveryInstructions`) usando los mappers de Drizzle si es necesario.
   - Verifica que todos los formularios, APIs y componentes usan el campo correcto.

---

3. üß† **UNIFICACI√ìN COMPLETA DEL MODELO DE CLIENTE**:
   - Todos los datos del cliente deben residir exclusivamente en la tabla `customers`.
   - Cuando se edite un cliente desde el wizard, formulario embebido o ficha de cliente, los cambios deben reflejarse en `customers`.
   - No debe haber una copia de datos dentro de `orders`, `shippingAddress` o cualquier otra estructura que desincronice la informaci√≥n del cliente.
   - Si la orden requiere direcci√≥n de env√≠o diferente, solo gu√°rdala en `orders`, pero no sobrescribas `customers` a menos que el usuario lo indique.

---

4. üëÅ **CORRECCI√ìN DE LA FICHA DE CLIENTE**:
   - En la vista de ‚ÄúVer‚Äù o ‚ÄúEditar‚Äù cliente, carga siempre los datos desde la base de datos por `id` y muestra exactamente lo que est√° en la tabla `customers`.
   - No uses versiones en memoria ni datos que provengan de formularios anteriores.

---

5. üß© **CORRECCI√ìN DEL LISTADO DE CLIENTES**:
   - Aseg√∫rate de que la informaci√≥n mostrada en la lista de clientes provenga del mismo origen (`customers`) que la ficha de cliente.
   - Si el listado est√° mostrando datos actualizados y la ficha no, hay un problema de fuente de datos inconsistente. Corr√≠gelo para que ambos usen la misma consulta o hook.

---

6. üßô‚Äç‚ôÇÔ∏è **WIZARD DE ENV√çO (ShippingLabelForm.tsx)**:
   - Aseg√∫rate de que los campos editables en el paso 2 y paso 3 se actualicen correctamente en la tabla `customers`.
   - Revisa si los campos del paso 2 est√°n sobreescribiendo err√≥neamente los campos del paso 3 (ej. c√©dula en campo ciudad).
   - Cuando se realiza una b√∫squeda de cliente y se autocompleta el formulario, aseg√∫rate de mapear correctamente los valores de `delivery_instructions`, `city`, `province`, etc.

---

7. üîÅ **SINCRONIZACI√ìN EN PDF Y ETIQUETA**:
   - El PDF y la etiqueta deben mostrar la informaci√≥n m√°s reciente y real del cliente directamente desde la tabla `customers`, no de una cach√© ni del payload temporal del wizard.

---

8. üìÇ **MIGRACI√ìN Y LIMPIEZA FINAL**:
   - Crea una migraci√≥n SQL que:
     - Elimine columnas duplicadas (`name`, `deliveryInstructions`, etc.)
     - Unifique datos bajo un solo esquema
     - Aplique renombramientos si es necesario
   - Valida que despu√©s de la migraci√≥n no haya campos obsoletos ni referencias rotas.

---

9. üá™üá® **CONSIDERACI√ìN CULTURAL PARA NOMBRES EN ECUADOR Y LATINOAM√âRICA**:
   - En Ecuador es culturalmente importante capturar `firstName` y `lastName` por separado.
   - Muchas personas tienen dos nombres y dos apellidos, pero por requisitos de operaci√≥n basta con uno y uno.
   - Mantenerlos separados es mejor para formularios oficiales, validaciones y generaci√≥n de reportes.
   - Solo une los nombres visualmente cuando se requiera.

---

üîÅ **RECUERDA:**
Este trabajo debe ser exhaustivo y eliminar todos los bugs e inconsistencias entre:
- Listado de clientes
- Ficha completa del cliente
- Wizard (pasos 2, 3 y resumen)
- Formularios embebidos
- PDFs y etiquetas
- Datos en la base de datos

NO quiero soluciones parciales. Haz pruebas para confirmar que la informaci√≥n del cliente es consistente y sincronizada en todas las vistas. Al finalizar, deja documentado todo lo que hiciste y en qu√© archivos hiciste cambios.