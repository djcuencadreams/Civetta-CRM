Corrige estos 2 bugs siguiendo buenas pr√°cticas, sin duplicar valores ni sobrescribir campos. Usa c√≥digo limpio, validado y con los nombres correctos. Aqu√≠ est√° el detalle:

‚∏ª

‚úÖ BUG 1: Tel√©fono mal guardado / mostrado
1. En CustomerForm.tsx:
‚Ä¢ Al hacer submit, une correctamente countryCode y phoneNumber usando joinPhoneNumber() y guarda como phone.
‚Ä¢ Aseg√∫rate que al cargar un cliente, se divida phone usando parsePhoneNumber() y llene correctamente los dos campos.
2. En ShippingLabelForm.tsx:
‚Ä¢ Usa parsePhoneNumber() para separar phone y mostrarlo como C√≥digo Pa√≠s + Tel√©fono.
‚Ä¢ Al guardar, usa joinPhoneNumber() para reconstruir phone y guardarlo correctamente.
‚Ä¢ Quita duplicaci√≥n de + en phoneCountry.
3. En phone-utils.ts:
‚Ä¢ Aseg√∫rate que joinPhoneNumber() elimine el + si phoneCountry ya lo tiene.

Ejemplo para validar: const phone = joinPhoneNumber(phoneCountry, phoneNumber); // resultado: +593999999999
‚∏ª

‚úÖ BUG 2: Campos del paso 3 sobrescriben paso 2
1. En ShippingLabelForm.tsx:
‚Ä¢ Usa un estado formSnapshot que haga un backup limpio del estado del paso anterior antes de ir al paso siguiente.
‚Ä¢ Aseg√∫rate de no sobrescribir campos de paso 2 (como identification, name, email) con los valores de paso 3.
‚Ä¢ Corrige la funci√≥n que mapea formData desde los inputs del paso 3.
2. Verifica que cada setFormData({...formData, campoNuevo: valor}) no borre lo anterior y no confunda los nombres (city NO debe pisar identification, por ejemplo).

‚∏ª

üßº Mejora de pr√°ctica adicional:
‚Ä¢ En la base de datos o API, el campo phone debe ser √∫nico y limpio (ej. +593999999999) y nunca guardar countryCode ni phoneNumber como campos separados en DB.
‚Ä¢ En la interfaz (cliente), est√° bien separarlos para UX pero debe unificarse al guardar o actualizar.

‚∏ª

üß™ Verificaci√≥n

Una vez corregido:
‚Ä¢ El n√∫mero debe mostrarse igual en ficha cliente, lista y wizard.
‚Ä¢ Al editar debe conservarse sin duplicaciones (++).
‚Ä¢ Al volver atr√°s del paso 3 al paso 2, todos los campos deben estar igual como estaban antes.