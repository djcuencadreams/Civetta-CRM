// üõ†Ô∏è PROMPT PARA REPLIT AI AGENT (SOLUCI√ìN DEFINITIVA)

// Danny ha detectado un bug grave: la lista de clientes muestra datos (como nombres y direcci√≥n) actualizados desde el wizard, pero al abrir la ficha del cliente (ver o editar), los datos est√°n desactualizados. Esto incluye campos como nombre, apellido, n√∫mero de c√©dula, email, y direcci√≥n. Tambi√©n hay problemas anteriores de inconsistencia entre `deliveryInstructions` y `delivery_instructions` que podr√≠an estar involucrados.

// üéØ OBJETIVO: Corregir definitivamente la inconsistencia entre los datos mostrados en la lista de clientes y los mostrados al visualizar/editar la ficha del cliente, garantizando que todo se sincronice correctamente con la base de datos y use los mismos campos y l√≥gica de mapeo.

// üîç PASOS CONCRETOS:

1. ‚úÖ REVISA el componente del frontend que carga la lista de clientes (`CustomerList` o similar). Aseg√∫rate de que los datos usados provienen exclusivamente de la base de datos actualizada (v√≠a API o fetch) y no de un cache o archivo `json` local como `customers.json` que no se sincronice.

2. ‚úÖ REVISA el componente del frontend que carga la vista y edici√≥n del cliente (`CustomerDetails`, `CustomerView`, `CustomerEdit` o similar). Aseg√∫rate de que est√© usando exactamente la misma fuente de datos que la lista de clientes. Ambos deben usar la versi√≥n m√°s reciente desde la DB.

3. ‚úÖ VERIFICA si existe duplicidad de campos en la base de datos, como por ejemplo:
   - `firstName`, `lastName`, y `name`
   - `deliveryInstructions` vs `delivery_instructions`
   - Si el nombre completo (`name`) se actualiza pero `firstName` y `lastName` no, o viceversa, y el componente usa uno u otro seg√∫n el lugar, eso explicar√≠a el bug.

4. ‚úÖ UNIFICA EL MODELO DE DATOS:
   - Usa solo un conjunto de campos para representar la informaci√≥n del cliente.
   - Si hay un campo `name`, elim√≠nalo y usa siempre `firstName` + `lastName` en todos los componentes.
   - Usa `delivery_instructions` de forma √∫nica y borra cualquier referencia a `deliveryInstructions` en frontend y backend.

5. ‚úÖ ACTUALIZA LAS FUNCIONES DE GUARDADO Y ACTUALIZACI√ìN DE CLIENTES:
   - Aseg√∫rate de que todos los campos de cliente (nombres, email, c√©dula, direcci√≥n e instrucciones) se actualicen correctamente en la tabla `customers`.
   - Verifica que la funci√≥n de guardado desde el wizard haga un `UPDATE` sobre `customers` y no cree un registro nuevo o lo haga parcialmente.

6. ‚úÖ ACTUALIZA LAS CONSULTAS:
   - Cuando el usuario entra a la vista o edici√≥n de un cliente, aseg√∫rate de que se haga una nueva consulta en tiempo real a la base de datos y no se use una versi√≥n antigua.

7. ‚úÖ REVISI√ìN FINAL:
   - Verifica que al editar datos desde el wizard (nombre, direcci√≥n, instrucciones, etc), se reflejen tanto en la lista como en la ficha del cliente.
   - Verifica que no haya campos que persistan datos antiguos.

// üö® IMPORTANTE: HAZ UN BACKUP antes de eliminar campos duplicados como `deliveryInstructions` o `name`, y verifica que todos los lugares del sistema est√©n ajustados a los nuevos nombres √∫nicos.

// ‚úÖ UNA VEZ TERMINADO:
   - Confirmar que editar un cliente desde el wizard modifica correctamente su ficha.
   - Confirmar que el nombre, email, direcci√≥n e instrucciones coincidan en la lista y en la ficha del cliente.
   - Confirmar que el PDF de la etiqueta se genere con estos datos actualizados.

// Este fix es prioritario y debe resolverse antes de cualquier nueva funcionalidad. Danny conf√≠a en la ejecuci√≥n precisa y profesional de este fix.
